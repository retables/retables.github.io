"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[699],{6117:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>h,default:()=>v,frontMatter:()=>f,metadata:()=>N,toc:()=>x});var n=a(5675),o=a(9231),i=a(4852),r=a(1691),l=a(4161),s=a(6710),p=a(7579);const d=[{title:"Id",key:"id",flex:.5},{title:"Last name",key:"about.lastName"},{title:"Age",key:"about.age",flex:.5},{title:"Job",key:"about.job",flex:1.5},{title:"Company",key:"company",flex:1.5}];const m=function(){return o.createElement(s.iA,{indexKey:"id",data:p.M.slice(0,3),columnConfigs:d,baseHeaderClasses:"font-bold bg-gray-100 dark:bg-stripe",baseCellPadding:{horizontal:"10px",vertical:"10px"}})},c=e=>o.createElement("div",{className:"overflow-hidden"},e.px&&e.px!==1/0?`${e.px}px`:"-"),k=[{title:"Name",key:"breakpoint",renderer:e=>o.createElement("code",{className:"overflow-hidden"},e.item.breakpoint),flex:1.5,disableOrderIcon:!0},{title:"From",key:"from",renderer:e=>o.createElement(c,{px:e.item.from}),disableOrderIcon:!0},{title:"To",key:"to",renderer:e=>o.createElement(c,{px:e.item.to}),disableOrderIcon:!0}],u=[{breakpoint:"BREAKPOINT.XS",from:0,to:639},{breakpoint:"BREAKPOINT.SM",from:640,to:767},{breakpoint:"BREAKPOINT.MD",from:768,to:1023},{breakpoint:"BREAKPOINT.LG",from:1024,to:1279},{breakpoint:"BREAKPOINT.XL",from:1280,to:1535},{breakpoint:"BREAKPOINT.DOUBLEXL",from:1536,to:1/0}];const y=function(){return o.createElement(s.iA,{indexKey:"breakpoint",columnConfigs:k,data:u,baseHeaderClasses:"font-bold",baseCellPadding:{vertical:"10px",horizontal:"10px"},gridConfig:{showExternLines:s.Pn.ALL,showHorizontalLines:!0,showVerticalLines:!0,width:"1px",color:"#606770"},baseRowClasses:e=>e%2!=0?"":" bg-gray-100 dark:bg-stripe",resizable:!1})};var b=a(8576);const f={sidebar_position:3},h="Quick start",N={unversionedId:"quick-start",id:"quick-start",title:"Quick start",description:"reTables wants to minimize the code needed to render a table. All you need to get started is:",source:"@site/docs/quick-start.mdx",sourceDirName:".",slug:"/quick-start",permalink:"/quick-start",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Examples context",permalink:"/examples-context"},next:{title:"Basic personalization",permalink:"/basic-personalization"}},g={},x=[{value:"Core concepts",id:"core-concepts",level:2},{value:"Data key",id:"data-key",level:3},{value:"NestedKeyOf type",id:"nestedkeyof-type",level:3},{value:"Column config",id:"column-config",level:3},{value:"Breakpoints",id:"breakpoints",level:3},{value:"Your first table",id:"your-first-table",level:2}],C={toc:x},T="wrapper";function v(e){let{components:t,...a}=e;return(0,i.kt)(T,(0,n.Z)({},C,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"quick-start"},"Quick start"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"reTables")," wants to minimize the code needed to render a table. All you need to get started is:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/examples-context#the-people-array"},(0,i.kt)("strong",{parentName:"a"},"Array of data"))," you want to display and its type (if you are using Typescript)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#data-key"},(0,i.kt)("strong",{parentName:"a"},"Unique data key"))," for every item in the array"),(0,i.kt)("li",{parentName:"ul"},"Basic ",(0,i.kt)("a",{parentName:"li",href:"#column-config"},(0,i.kt)("strong",{parentName:"a"},"column configuration")))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The following examples use the ",(0,i.kt)("em",{parentName:"p"},"people array")," presented early in the ",(0,i.kt)("a",{parentName:"p",href:"/examples-context#the-people-array"},"doc"),".")),(0,i.kt)("h2",{id:"core-concepts"},"Core concepts"),(0,i.kt)("p",null,"Let's start by looking at the core concepts of ",(0,i.kt)("strong",{parentName:"p"},"reTables"),"."),(0,i.kt)("h3",{id:"data-key"},"Data key"),(0,i.kt)("p",null,"When rendering a table, ",(0,i.kt)("strong",{parentName:"p"},"reTables")," needs an internal key to identify uniquely every object in the array. Generally this key is ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," but you can specify any property, even the nested ones."),(0,i.kt)("p",null,"In the people example you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," or other values, as your ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKey"),", such as ",(0,i.kt)("inlineCode",{parentName:"p"},"contacts.phone")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"about.job"),"."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Make sure that all the objects in the array have an unique ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKey")," value. Duplicated entries can cause problems during sorting or pagination.")),(0,i.kt)("h3",{id:"nestedkeyof-type"},"NestedKeyOf type"),(0,i.kt)("p",null,"Many props, like the previous ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKey")," example, use ",(0,i.kt)("inlineCode",{parentName:"p"},"NestedKeyOf")," as a type. This is basically a glorified ",(0,i.kt)("inlineCode",{parentName:"p"},"keyof"),", which allows you to access nested properties in a dotted notation.\nHere is the list of the inferred values for ",(0,i.kt)("inlineCode",{parentName:"p"},"People"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import Person from \'src/types\';\nimport { NestedKeyOf } from \'retables\';\n\ntype PersonKeys = NestedKeyOf<Person>;\n// type PersonKeys = "id" | "company" | "about.firstName" | "about.lastName" | "about.job" | "about.age" | "contacts.address" | "contacts.phone"\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Arrays, dates and optional properties are excluded from ",(0,i.kt)("inlineCode",{parentName:"p"},"NestedKeyOf<T>"),".\nIn some occasions, like the columns configuration, ",(0,i.kt)("strong",{parentName:"p"},"reTables")," uses ",(0,i.kt)("inlineCode",{parentName:"p"},"NestedKeyOfWithOptionals<T>")," type which allows optional properties.")),(0,i.kt)("h3",{id:"column-config"},"Column config"),(0,i.kt)("p",null,"Every table needs its ",(0,i.kt)("strong",{parentName:"p"},"column config"),". This is an object that describes which columns need to be displayed and how to retrieve data for each of it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"file=../src/examples/quick-start/columns.ts",file:"../src/examples/quick-start/columns.ts"},"import { ColumnConfig } from 'retables';\nimport { Person } from '@site/src/data';\n\nexport const peopleColumns: ColumnConfig<Person>[] = [\n    { title: 'Id', key: 'id', flex: 0.5 },\n    { title: 'Last name', key: 'about.lastName' },\n    { title: 'Age', key: 'about.age', flex: 0.5 },\n    { title: 'Job', key: 'about.job', flex: 1.5 },\n    { title: 'Company', key: 'company', flex: 1.5 }\n];\n")),(0,i.kt)("p",null,"A basic column config needs:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"title")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): Column name that will be displayed in the header"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"key")," (",(0,i.kt)("inlineCode",{parentName:"li"},"NestedKeyOfWithOptionals<T>"),"): Object key that selects the property. (This will also effect sorting)")),(0,i.kt)("p",null,"As shown above, you can also specify a ",(0,i.kt)("strong",{parentName:"p"},"flex property "),"(defaults to 1) that indicates the horizontal weight of each column.\nA complete list of the API can be found ",(0,i.kt)("a",{parentName:"p",href:"/api-reference"},"here"),"."),(0,i.kt)("h3",{id:"breakpoints"},"Breakpoints"),(0,i.kt)("p",null,"Some of the table props can be personalized, based on the current width of the screen."),(0,i.kt)("p",null,"By default, below the ",(0,i.kt)("inlineCode",{parentName:"p"},"BREAKPOINT.MD"),", the mobile version of the table will automatically be displayed."),(0,i.kt)(b.Z,{mdxType:"BrowserOnly"},(()=>(0,i.kt)(y,{mdxType:"BreakpointsTable"}))),(0,i.kt)("br",null),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"BREAKPOINT")," enum is directly exported from ",(0,i.kt)("strong",{parentName:"p"},"reTables"),".")),(0,i.kt)("h2",{id:"your-first-table"},"Your first table"),(0,i.kt)("p",null,"This is all you need to do in ",(0,i.kt)("strong",{parentName:"p"},"reTables")," to render minimal sortable and responsive table."),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"QuickStartTable.tsx",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"file=../src/examples/quick-start/QuickStartTable.tsx#L6-L25",file:"../src/examples/quick-start/QuickStartTable.tsx#L6-L25"},"function QuickStartTable() {\n    return (\n        <Table<Person>\n            indexKey='id'\n            data={people.slice(0, 3)}\n            columnConfigs={peopleColumns}\n            baseHeaderClasses='font-bold bg-gray-100 dark:bg-stripe'\n            baseCellPadding={{\n                horizontal: '10px',\n                vertical: '10px'\n            }}\n        />\n    );\n}\n\nexport default QuickStartTable;\n\n"))),(0,i.kt)(l.Z,{value:"columns.ts",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"file=../src/examples/quick-start/columns.ts",file:"../src/examples/quick-start/columns.ts"},"import { ColumnConfig } from 'retables';\nimport { Person } from '@site/src/data';\n\nexport const peopleColumns: ColumnConfig<Person>[] = [\n    { title: 'Id', key: 'id', flex: 0.5 },\n    { title: 'Last name', key: 'about.lastName' },\n    { title: 'Age', key: 'about.age', flex: 0.5 },\n    { title: 'Job', key: 'about.job', flex: 1.5 },\n    { title: 'Company', key: 'company', flex: 1.5 }\n];\n"))),(0,i.kt)(l.Z,{value:"Live example",mdxType:"TabItem"},(0,i.kt)(b.Z,{mdxType:"BrowserOnly"},(()=>(0,i.kt)(m,{mdxType:"QuickStartTable"}))))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"All the tables on the documentation site are rendered using ",(0,i.kt)("strong",{parentName:"p"},"reTables"),". Head over to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Live example")," tab to see the result!")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Note that here we have also applied to the ",(0,i.kt)("strong",{parentName:"p"},"header")," some personalization, using ",(0,i.kt)("inlineCode",{parentName:"p"},"baseHeadersClasses")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"baseCellPadding"),". More of these options will be explained in the ",(0,i.kt)("a",{parentName:"p",href:"/basic-personalization"},"next section"),".")))}v.isMDXComponent=!0}}]);